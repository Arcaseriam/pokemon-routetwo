public class Constants {
	static final String hashName(String s) {
		return s.toUpperCase().replaceAll("\\W", "");
	}

	static final String endl = System.getProperty("line.separator");
	static final int numPokes = 251;

	// used to initialize all species
	static final String[] poke_names = { "Select Pokemon", "Bulbasaur",
			"Ivysaur", "Venusaur", "Charmander", "Charmeleon", "Charizard",
			"Squirtle", "Wartortle", "Blastoise", "Caterpie", "Metapod",
			"Butterfree", "Weedle", "Kakuna", "Beedrill", "Pidgey",
			"Pidgeotto", "Pidgeot", "Rattata", "Raticate", "Spearow", "Fearow",
			"Ekans", "Arbok", "Pikachu", "Raichu", "Sandshrew", "Sandslash",
			"NidoranF", "Nidorina", "Nidoqueen", "NidoranM", "Nidorino",
			"Nidoking", "Clefairy", "Clefable", "Vulpix", "Ninetales",
			"Jigglypuff", "Wigglytuff", "Zubat", "Golbat", "Oddish", "Gloom",
			"Vileplume", "Paras", "Parasect", "Venonat", "Venomoth", "Diglett",
			"Dugtrio", "Meowth", "Persian", "Psyduck", "Golduck", "Mankey",
			"Primeape", "Growlithe", "Arcanine", "Poliwag", "Poliwhirl",
			"Poliwrath", "Abra", "Kadabra", "Alakazam", "Machop", "Machoke",
			"Machamp", "Bellsprout", "Weepinbell", "Victreebel", "Tentacool",
			"Tentacruel", "Geodude", "Graveler", "Golem", "Ponyta", "Rapidash",
			"Slowpoke", "Slowbro", "Magnemite", "Magneton", "Farfetch'd",
			"Doduo", "Dodrio", "Seel", "Dewgong", "Grimer", "Muk", "Shellder",
			"Cloyster", "Gastly", "Haunter", "Gengar", "Onix", "Drowzee",
			"Hypno", "Krabby", "Kingler", "Voltorb", "Electrode", "Exeggcute",
			"Exeggutor", "Cubone", "Marowak", "Hitmonlee", "Hitmonchan",
			"Lickitung", "Koffing", "Weezing", "Rhyhorn", "Rhydon", "Chansey",
			"Tangela", "Kangaskhan", "Horsea", "Seadra", "Goldeen", "Seaking",
			"Staryu", "Starmie", "Mr.Mime", "Scyther", "Jynx", "Electabuzz",
			"Magmar", "Pinsir", "Tauros", "Magikarp", "Gyarados", "Lapras",
			"Ditto", "Eevee", "Vaporeon", "Jolteon", "Flareon", "Porygon",
			"Omanyte", "Omastar", "Kabuto", "Kabutops", "Aerodactyl",
			"Snorlax", "Articuno", "Zapdos", "Moltres", "Dratini", "Dragonair",
			"Dragonite", "Mewtwo", "Mew", "Chikorita", "Bayleef", "Meganium",
			"Cyndaquil", "Quilava", "Typhlosion", "Totodile", "Croconaw",
			"Feraligatr", "Sentret", "Furret", "Hoothoot", "Noctowl", "Ledyba",
			"Ledian", "Spinarak", "Ariados", "Crobat", "Chinchou", "Lanturn",
			"Pichu", "Cleffa", "Igglybuff", "Togepi", "Togetic", "Natu",
			"Xatu", "Mareep", "Flaaffy", "Ampharos", "Bellossom", "Marill",
			"Azumarill", "Sudowoodo", "Politoed", "Hoppip", "Skiploom",
			"Jumpluff", "Aipom", "Sunkern", "Sunflora", "Yanma", "Wooper",
			"Quagsire", "Espeon", "Umbreon", "Murkrow", "Slowking",
			"Misdreavus", "Unown", "Wobbuffet", "Girafarig", "Pineco",
			"Forretress", "Dunsparce", "Gligar", "Steelix", "Snubbull",
			"Granbull", "Qwilfish", "Scizor", "Shuckle", "Heracross",
			"Sneasel", "Teddiursa", "Ursaring", "Slugma", "Magcargo", "Swinub",
			"Piloswine", "Corsola", "Remoraid", "Octillery", "Delibird",
			"Mantine", "Skarmory", "Houndour", "Houndoom", "Kingdra", "Phanpy",
			"Donphan", "Porygon2", "Stantler", "Smeargle", "Tyrogue",
			"Hitmontop", "Smoochum", "Elekid", "Magby", "Miltank", "Blissey",
			"Raikou", "Entei", "Suicune", "Larvitar", "Pupitar", "Tyranitar",
			"Lugia", "Ho-Oh", "Celebi", };

	static final int[] killexps = { 0, 64, 141, 208, 65, 142, 209, 66, 143,
			210, 53, 72, 160, 52, 71, 159, 55, 113, 172, 57, 116, 58, 162, 62,
			147, 82, 122, 93, 163, 59, 117, 194, 60, 118, 195, 68, 129, 63,
			178, 76, 109, 54, 171, 78, 132, 184, 70, 128, 75, 138, 81, 153, 69,
			148, 80, 174, 74, 149, 91, 213, 77, 131, 185, 73, 145, 186, 88,
			146, 193, 84, 151, 191, 105, 205, 86, 134, 177, 152, 192, 99, 164,
			89, 161, 94, 96, 158, 100, 176, 90, 157, 97, 203, 95, 126, 190,
			108, 102, 165, 115, 206, 103, 150, 98, 212, 87, 124, 139, 140, 127,
			114, 173, 135, 204, 255, 166, 175, 83, 155, 111, 170, 106, 207,
			136, 187, 137, 156, 167, 200, 211, 20, 214, 219, 61, 92, 196, 197,
			198, 130, 120, 199, 119, 201, 202, 154, 215, 216, 217, 67, 144,
			218, 220, 64, 64, 141, 208, 65, 142, 209, 66, 143, 210, 57, 116,
			58, 162, 54, 134, 54, 134, 204, 90, 156, 42, 37, 39, 74, 114, 73,
			171, 59, 117, 194, 184, 58, 153, 135, 185, 74, 136, 176, 94, 52,
			146, 147, 52, 137, 197, 197, 107, 164, 147, 61, 177, 149, 60, 118,
			75, 108, 196, 63, 178, 100, 200, 80, 200, 132, 124, 189, 78, 154,
			78, 160, 113, 78, 164, 183, 168, 168, 114, 204, 207, 124, 189, 180,
			165, 106, 91, 138, 87, 106, 117, 200, 255, 216, 217, 215, 67, 144,
			218, 220, 220, 64 };
	final static int[][] basestats = { { 0, 0, 0, 0, 0, 0 },
			{ 45, 49, 49, 45, 65, 65 }, { 60, 62, 63, 60, 80, 80 },
			{ 80, 82, 83, 80, 100, 100 }, { 39, 52, 43, 65, 60, 50 },
			{ 58, 64, 58, 80, 80, 65 }, { 78, 84, 78, 100, 109, 85 },
			{ 44, 48, 65, 43, 50, 64 }, { 59, 63, 80, 58, 65, 80 },
			{ 79, 83, 100, 78, 85, 105 }, { 45, 30, 35, 45, 20, 20 },
			{ 50, 20, 55, 30, 25, 25 }, { 60, 45, 50, 70, 80, 80 },
			{ 40, 35, 30, 50, 20, 20 }, { 45, 25, 50, 35, 25, 25 },
			{ 65, 80, 40, 75, 45, 80 }, { 40, 45, 40, 56, 35, 35 },
			{ 63, 60, 55, 71, 50, 50 }, { 83, 80, 75, 91, 70, 70 },
			{ 30, 56, 35, 72, 25, 35 }, { 55, 81, 60, 97, 50, 70 },
			{ 40, 60, 30, 70, 31, 31 }, { 65, 90, 65, 100, 61, 61 },
			{ 35, 60, 44, 55, 40, 54 }, { 60, 85, 69, 80, 65, 79 },
			{ 35, 55, 30, 90, 50, 40 }, { 60, 90, 55, 100, 90, 80 },
			{ 50, 75, 85, 40, 20, 30 }, { 75, 100, 110, 65, 45, 55 },
			{ 55, 47, 52, 41, 40, 40 }, { 70, 62, 67, 56, 55, 55 },
			{ 90, 82, 87, 76, 75, 85 }, { 46, 57, 40, 50, 40, 40 },
			{ 61, 72, 57, 65, 55, 55 }, { 81, 92, 77, 85, 85, 75 },
			{ 70, 45, 48, 35, 60, 65 }, { 95, 70, 73, 60, 85, 90 },
			{ 38, 41, 40, 65, 50, 65 }, { 73, 76, 75, 100, 81, 100 },
			{ 115, 45, 20, 20, 45, 25 }, { 140, 70, 45, 45, 75, 50 },
			{ 40, 45, 35, 55, 30, 40 }, { 75, 80, 70, 90, 65, 75 },
			{ 45, 50, 55, 30, 75, 65 }, { 60, 65, 70, 40, 85, 75 },
			{ 75, 80, 85, 50, 100, 90 }, { 35, 70, 55, 25, 45, 55 },
			{ 60, 95, 80, 30, 60, 80 }, { 60, 55, 50, 45, 40, 55 },
			{ 70, 65, 60, 90, 90, 75 }, { 10, 55, 25, 95, 35, 45 },
			{ 35, 80, 50, 120, 50, 70 }, { 40, 45, 35, 90, 40, 40 },
			{ 65, 70, 60, 115, 65, 65 }, { 50, 52, 48, 55, 65, 50 },
			{ 80, 82, 78, 85, 95, 80 }, { 40, 80, 35, 70, 35, 45 },
			{ 65, 105, 60, 95, 60, 70 }, { 55, 70, 45, 60, 70, 50 },
			{ 90, 110, 80, 95, 100, 80 }, { 40, 50, 40, 90, 40, 40 },
			{ 65, 65, 65, 90, 50, 50 }, { 90, 85, 95, 70, 70, 90 },
			{ 25, 20, 15, 90, 105, 55 }, { 40, 35, 30, 105, 120, 70 },
			{ 55, 50, 45, 120, 135, 85 }, { 70, 80, 50, 35, 35, 35 },
			{ 80, 100, 70, 45, 50, 60 }, { 90, 130, 80, 55, 65, 85 },
			{ 50, 75, 35, 40, 70, 30 }, { 65, 90, 50, 55, 85, 45 },
			{ 80, 105, 65, 70, 100, 60 }, { 40, 40, 35, 70, 50, 100 },
			{ 80, 70, 65, 100, 80, 120 }, { 40, 80, 100, 20, 30, 30 },
			{ 55, 95, 115, 35, 45, 45 }, { 80, 110, 130, 45, 55, 65 },
			{ 50, 85, 55, 90, 65, 65 }, { 65, 100, 70, 105, 80, 80 },
			{ 90, 65, 65, 15, 40, 40 }, { 95, 75, 110, 30, 100, 80 },
			{ 25, 35, 70, 45, 95, 55 }, { 50, 60, 95, 70, 120, 70 },
			{ 52, 65, 55, 60, 58, 62 }, { 35, 85, 45, 75, 35, 35 },
			{ 60, 110, 70, 100, 60, 60 }, { 65, 45, 55, 45, 45, 70 },
			{ 90, 70, 80, 70, 70, 95 }, { 80, 80, 50, 25, 40, 50 },
			{ 105, 105, 75, 50, 65, 100 }, { 30, 65, 100, 40, 45, 25 },
			{ 50, 95, 180, 70, 85, 45 }, { 30, 35, 30, 80, 100, 35 },
			{ 45, 50, 45, 95, 115, 55 }, { 60, 65, 60, 110, 130, 75 },
			{ 35, 45, 160, 70, 30, 45 }, { 60, 48, 45, 42, 43, 90 },
			{ 85, 73, 70, 67, 73, 115 }, { 30, 105, 90, 50, 25, 25 },
			{ 55, 130, 115, 75, 50, 50 }, { 40, 30, 50, 100, 55, 55 },
			{ 60, 50, 70, 140, 80, 80 }, { 60, 40, 80, 40, 60, 45 },
			{ 95, 95, 85, 55, 125, 65 }, { 50, 50, 95, 35, 40, 50 },
			{ 60, 80, 110, 45, 50, 80 }, { 50, 120, 53, 87, 35, 110 },
			{ 50, 105, 79, 76, 35, 110 }, { 90, 55, 75, 30, 60, 75 },
			{ 40, 65, 95, 35, 60, 45 }, { 65, 90, 120, 60, 85, 70 },
			{ 80, 85, 95, 25, 30, 30 }, { 105, 130, 120, 40, 45, 45 },
			{ 250, 5, 5, 50, 35, 105 }, { 65, 55, 115, 60, 100, 40 },
			{ 105, 95, 80, 90, 40, 80 }, { 30, 40, 70, 60, 70, 25 },
			{ 55, 65, 95, 85, 95, 45 }, { 45, 67, 60, 63, 35, 50 },
			{ 80, 92, 65, 68, 65, 80 }, { 30, 45, 55, 85, 70, 55 },
			{ 60, 75, 85, 115, 100, 85 }, { 40, 45, 65, 90, 100, 120 },
			{ 70, 110, 80, 105, 55, 80 }, { 65, 50, 35, 95, 115, 95 },
			{ 65, 83, 57, 105, 95, 85 }, { 65, 95, 57, 93, 100, 85 },
			{ 65, 125, 100, 85, 55, 70 }, { 75, 100, 95, 110, 40, 70 },
			{ 20, 10, 55, 80, 15, 20 }, { 95, 125, 79, 81, 60, 100 },
			{ 130, 85, 80, 60, 85, 95 }, { 48, 48, 48, 48, 48, 48 },
			{ 55, 55, 50, 55, 45, 65 }, { 130, 65, 60, 65, 110, 95 },
			{ 65, 65, 60, 130, 110, 95 }, { 65, 130, 60, 65, 95, 110 },
			{ 65, 60, 70, 40, 85, 75 }, { 35, 40, 100, 35, 90, 55 },
			{ 70, 60, 125, 55, 115, 70 }, { 30, 80, 90, 55, 55, 45 },
			{ 60, 115, 105, 80, 65, 70 }, { 80, 105, 65, 130, 60, 75 },
			{ 160, 110, 65, 30, 65, 110 }, { 90, 85, 100, 85, 95, 125 },
			{ 90, 90, 85, 100, 125, 90 }, { 90, 100, 90, 90, 125, 85 },
			{ 41, 64, 45, 50, 50, 50 }, { 61, 84, 65, 70, 70, 70 },
			{ 91, 134, 95, 80, 100, 100 }, { 106, 110, 90, 130, 154, 90 },
			{ 100, 100, 100, 100, 100, 100 }, { 45, 49, 65, 45, 49, 65 },
			{ 60, 62, 80, 60, 63, 80 }, { 80, 82, 100, 80, 83, 100 },
			{ 39, 52, 43, 65, 60, 50 }, { 58, 64, 58, 80, 80, 65 },
			{ 78, 84, 78, 100, 109, 85 }, { 50, 65, 64, 43, 44, 48 },
			{ 65, 80, 80, 58, 59, 63 }, { 85, 105, 100, 78, 79, 83 },
			{ 35, 46, 34, 20, 35, 45 }, { 85, 76, 64, 90, 45, 55 },
			{ 60, 30, 30, 50, 36, 56 }, { 100, 50, 50, 70, 76, 96 },
			{ 40, 20, 30, 55, 40, 80 }, { 55, 35, 50, 85, 55, 110 },
			{ 40, 60, 40, 30, 40, 40 }, { 70, 90, 70, 40, 60, 60 },
			{ 85, 90, 80, 130, 70, 80 }, { 75, 38, 38, 67, 56, 56 },
			{ 125, 58, 58, 67, 76, 76 }, { 20, 40, 15, 60, 35, 35 },
			{ 50, 25, 28, 15, 45, 55 }, { 90, 30, 15, 15, 40, 20 },
			{ 35, 20, 65, 20, 40, 65 }, { 55, 40, 85, 40, 80, 105 },
			{ 40, 50, 45, 70, 70, 45 }, { 65, 75, 70, 95, 95, 70 },
			{ 55, 40, 40, 35, 65, 45 }, { 70, 55, 55, 45, 80, 60 },
			{ 90, 75, 75, 55, 115, 90 }, { 75, 80, 85, 50, 90, 100 },
			{ 70, 20, 50, 40, 20, 50 }, { 100, 50, 80, 50, 50, 80 },
			{ 70, 100, 115, 30, 30, 65 }, { 90, 75, 75, 70, 90, 100 },
			{ 35, 35, 40, 50, 35, 55 }, { 55, 45, 50, 80, 45, 65 },
			{ 75, 55, 70, 110, 55, 85 }, { 55, 70, 55, 85, 40, 55 },
			{ 30, 30, 30, 30, 30, 30 }, { 75, 75, 55, 30, 105, 85 },
			{ 65, 65, 45, 95, 75, 45 }, { 55, 45, 45, 15, 25, 25 },
			{ 95, 85, 85, 35, 65, 65 }, { 65, 65, 60, 110, 130, 95 },
			{ 95, 65, 110, 65, 60, 130 }, { 60, 85, 42, 91, 85, 42 },
			{ 95, 75, 80, 30, 100, 110 }, { 60, 60, 60, 85, 85, 85 },
			{ 48, 72, 48, 48, 72, 48 }, { 190, 33, 58, 33, 33, 58 },
			{ 70, 80, 65, 85, 90, 65 }, { 50, 65, 90, 15, 35, 35 },
			{ 75, 90, 140, 40, 60, 60 }, { 100, 70, 70, 45, 65, 65 },
			{ 65, 75, 105, 85, 35, 65 }, { 75, 85, 200, 30, 55, 65 },
			{ 60, 80, 50, 30, 40, 40 }, { 90, 120, 75, 45, 60, 60 },
			{ 65, 95, 75, 85, 55, 55 }, { 70, 130, 100, 65, 55, 80 },
			{ 20, 10, 230, 5, 10, 230 }, { 80, 125, 75, 85, 40, 95 },
			{ 55, 95, 55, 115, 35, 75 }, { 60, 80, 50, 40, 50, 50 },
			{ 90, 130, 75, 55, 75, 75 }, { 40, 40, 40, 20, 70, 40 },
			{ 50, 50, 120, 30, 80, 80 }, { 50, 50, 40, 50, 30, 30 },
			{ 100, 100, 80, 50, 60, 60 }, { 55, 55, 85, 35, 65, 85 },
			{ 35, 65, 35, 65, 65, 35 }, { 75, 105, 75, 45, 105, 75 },
			{ 45, 55, 45, 75, 65, 45 }, { 65, 40, 70, 70, 80, 140 },
			{ 65, 80, 140, 70, 40, 70 }, { 45, 60, 30, 65, 80, 50 },
			{ 75, 90, 50, 95, 110, 80 }, { 75, 95, 95, 85, 95, 95 },
			{ 90, 60, 60, 40, 40, 40 }, { 90, 120, 120, 50, 60, 60 },
			{ 85, 80, 90, 60, 105, 95 }, { 73, 95, 62, 85, 85, 65 },
			{ 55, 20, 35, 75, 20, 45 }, { 35, 35, 35, 35, 35, 35 },
			{ 50, 95, 95, 70, 35, 110 }, { 45, 30, 15, 65, 85, 65 },
			{ 45, 63, 37, 95, 65, 55 }, { 45, 75, 37, 83, 70, 55 },
			{ 95, 80, 105, 100, 40, 70 }, { 255, 10, 10, 55, 75, 135 },
			{ 90, 85, 75, 115, 115, 100 }, { 115, 115, 85, 100, 90, 75 },
			{ 100, 75, 115, 85, 90, 115 }, { 50, 64, 50, 41, 45, 50 },
			{ 70, 84, 70, 51, 65, 70 }, { 100, 134, 110, 61, 95, 100 },
			{ 106, 90, 130, 110, 90, 154 }, { 106, 130, 90, 90, 110, 154 },
			{ 100, 100, 100, 100, 100, 100 }, };
	static final ExpCurve[] exp_curves = { ExpCurve.NONE, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.FAST, ExpCurve.FAST, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.FAST, ExpCurve.FAST, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.SLOW, ExpCurve.SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.SLOW,
			ExpCurve.SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.SLOW,
			ExpCurve.SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.SLOW, ExpCurve.SLOW, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.SLOW, ExpCurve.SLOW,
			ExpCurve.FAST, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.SLOW,
			ExpCurve.SLOW, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.SLOW, ExpCurve.SLOW,
			ExpCurve.SLOW, ExpCurve.SLOW, ExpCurve.SLOW, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.SLOW, ExpCurve.SLOW, ExpCurve.SLOW,
			ExpCurve.SLOW, ExpCurve.SLOW, ExpCurve.SLOW, ExpCurve.SLOW,
			ExpCurve.SLOW, ExpCurve.SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.FAST, ExpCurve.FAST, ExpCurve.FAST, ExpCurve.FAST,
			ExpCurve.MEDIUM, ExpCurve.SLOW, ExpCurve.SLOW, ExpCurve.MEDIUM,
			ExpCurve.FAST, ExpCurve.FAST, ExpCurve.FAST, ExpCurve.FAST,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.FAST, ExpCurve.FAST, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.FAST, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM, ExpCurve.FAST,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM_SLOW,
			ExpCurve.MEDIUM, ExpCurve.FAST, ExpCurve.FAST, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM_SLOW, ExpCurve.SLOW,
			ExpCurve.MEDIUM_SLOW, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.SLOW, ExpCurve.SLOW,
			ExpCurve.FAST, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.FAST,
			ExpCurve.SLOW, ExpCurve.SLOW, ExpCurve.SLOW, ExpCurve.SLOW,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.SLOW, ExpCurve.FAST, ExpCurve.MEDIUM, ExpCurve.MEDIUM,
			ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.MEDIUM, ExpCurve.SLOW,
			ExpCurve.FAST, ExpCurve.SLOW, ExpCurve.SLOW, ExpCurve.SLOW,
			ExpCurve.SLOW, ExpCurve.SLOW, ExpCurve.SLOW, ExpCurve.SLOW,
			ExpCurve.SLOW, ExpCurve.MEDIUM_SLOW };
	static final Type[][] poke_types = { { Type.NONE },
			{ Type.GRASS, Type.POISON }, { Type.GRASS, Type.POISON },
			{ Type.GRASS, Type.POISON }, { Type.FIRE }, { Type.FIRE },
			{ Type.FIRE, Type.FLYING }, { Type.WATER }, { Type.WATER },
			{ Type.WATER }, { Type.BUG }, { Type.BUG },
			{ Type.BUG, Type.FLYING }, { Type.BUG, Type.POISON },
			{ Type.BUG, Type.POISON }, { Type.BUG, Type.POISON },
			{ Type.NORMAL, Type.FLYING }, { Type.NORMAL, Type.FLYING },
			{ Type.NORMAL, Type.FLYING }, { Type.NORMAL }, { Type.NORMAL },
			{ Type.NORMAL, Type.FLYING }, { Type.NORMAL, Type.FLYING },
			{ Type.POISON }, { Type.POISON }, { Type.ELECTRIC },
			{ Type.ELECTRIC }, { Type.GROUND }, { Type.GROUND },
			{ Type.POISON }, { Type.POISON }, { Type.POISON, Type.GROUND },
			{ Type.POISON }, { Type.POISON }, { Type.POISON, Type.GROUND },
			{ Type.NORMAL }, { Type.NORMAL }, { Type.FIRE }, { Type.FIRE },
			{ Type.NORMAL }, { Type.NORMAL }, { Type.POISON, Type.FLYING },
			{ Type.POISON, Type.FLYING }, { Type.GRASS, Type.POISON },
			{ Type.GRASS, Type.POISON }, { Type.GRASS, Type.POISON },
			{ Type.BUG, Type.GRASS }, { Type.BUG, Type.GRASS },
			{ Type.BUG, Type.POISON }, { Type.BUG, Type.POISON },
			{ Type.GROUND }, { Type.GROUND }, { Type.NORMAL }, { Type.NORMAL },
			{ Type.WATER }, { Type.WATER }, { Type.FIGHTING },
			{ Type.FIGHTING }, { Type.FIRE }, { Type.FIRE }, { Type.WATER },
			{ Type.WATER }, { Type.WATER, Type.FIGHTING }, { Type.PSYCHIC },
			{ Type.PSYCHIC }, { Type.PSYCHIC }, { Type.FIGHTING },
			{ Type.FIGHTING }, { Type.FIGHTING }, { Type.GRASS, Type.POISON },
			{ Type.GRASS, Type.POISON }, { Type.GRASS, Type.POISON },
			{ Type.WATER, Type.POISON }, { Type.WATER, Type.POISON },
			{ Type.ROCK, Type.GROUND }, { Type.ROCK, Type.GROUND },
			{ Type.ROCK, Type.GROUND }, { Type.FIRE }, { Type.FIRE },
			{ Type.WATER, Type.PSYCHIC }, { Type.WATER, Type.PSYCHIC },
			{ Type.ELECTRIC, Type.STEEL }, { Type.ELECTRIC, Type.STEEL },
			{ Type.NORMAL, Type.FLYING }, { Type.NORMAL, Type.FLYING },
			{ Type.NORMAL, Type.FLYING }, { Type.WATER },
			{ Type.WATER, Type.ICE }, { Type.POISON }, { Type.POISON },
			{ Type.WATER }, { Type.WATER, Type.ICE },
			{ Type.GHOST, Type.POISON }, { Type.GHOST, Type.POISON },
			{ Type.GHOST, Type.POISON }, { Type.ROCK, Type.GROUND },
			{ Type.PSYCHIC }, { Type.PSYCHIC }, { Type.WATER }, { Type.WATER },
			{ Type.ELECTRIC }, { Type.ELECTRIC }, { Type.GRASS, Type.PSYCHIC },
			{ Type.GRASS, Type.PSYCHIC }, { Type.GROUND }, { Type.GROUND },
			{ Type.FIGHTING }, { Type.FIGHTING }, { Type.NORMAL },
			{ Type.POISON }, { Type.POISON }, { Type.GROUND, Type.ROCK },
			{ Type.GROUND, Type.ROCK }, { Type.NORMAL }, { Type.GRASS },
			{ Type.NORMAL }, { Type.WATER }, { Type.WATER }, { Type.WATER },
			{ Type.WATER }, { Type.WATER }, { Type.WATER, Type.PSYCHIC },
			{ Type.PSYCHIC }, { Type.BUG, Type.FLYING },
			{ Type.ICE, Type.PSYCHIC }, { Type.ELECTRIC }, { Type.FIRE },
			{ Type.BUG }, { Type.NORMAL }, { Type.WATER },
			{ Type.WATER, Type.FLYING }, { Type.WATER, Type.ICE },
			{ Type.NORMAL }, { Type.NORMAL }, { Type.WATER },
			{ Type.ELECTRIC }, { Type.FIRE }, { Type.NORMAL },
			{ Type.ROCK, Type.WATER }, { Type.ROCK, Type.WATER },
			{ Type.ROCK, Type.WATER }, { Type.ROCK, Type.WATER },
			{ Type.ROCK, Type.FLYING }, { Type.NORMAL },
			{ Type.ICE, Type.FLYING }, { Type.ELECTRIC, Type.FLYING },
			{ Type.FIRE, Type.FLYING }, { Type.DRAGON }, { Type.DRAGON },
			{ Type.DRAGON, Type.FLYING }, { Type.PSYCHIC }, { Type.PSYCHIC },
			{ Type.GRASS }, { Type.GRASS }, { Type.GRASS }, { Type.FIRE },
			{ Type.FIRE }, { Type.FIRE }, { Type.WATER }, { Type.WATER },
			{ Type.WATER }, { Type.NORMAL }, { Type.NORMAL },
			{ Type.NORMAL, Type.FLYING }, { Type.NORMAL, Type.FLYING },
			{ Type.BUG, Type.FLYING }, { Type.BUG, Type.FLYING },
			{ Type.BUG, Type.POISON }, { Type.BUG, Type.POISON },
			{ Type.POISON, Type.FLYING }, { Type.WATER, Type.ELECTRIC },
			{ Type.WATER, Type.ELECTRIC }, { Type.ELECTRIC }, { Type.NORMAL },
			{ Type.NORMAL }, { Type.NORMAL }, { Type.NORMAL, Type.FLYING },
			{ Type.PSYCHIC, Type.FLYING }, { Type.PSYCHIC, Type.FLYING },
			{ Type.ELECTRIC }, { Type.ELECTRIC }, { Type.ELECTRIC },
			{ Type.GRASS }, { Type.WATER }, { Type.WATER }, { Type.ROCK },
			{ Type.WATER }, { Type.GRASS, Type.FLYING },
			{ Type.GRASS, Type.FLYING }, { Type.GRASS, Type.FLYING },
			{ Type.NORMAL }, { Type.GRASS }, { Type.GRASS },
			{ Type.BUG, Type.FLYING }, { Type.WATER, Type.GROUND },
			{ Type.WATER, Type.GROUND }, { Type.PSYCHIC }, { Type.DARK },
			{ Type.DARK, Type.FLYING }, { Type.WATER, Type.PSYCHIC },
			{ Type.GHOST }, { Type.PSYCHIC }, { Type.PSYCHIC },
			{ Type.NORMAL, Type.PSYCHIC }, { Type.BUG },
			{ Type.BUG, Type.STEEL }, { Type.NORMAL },
			{ Type.GROUND, Type.FLYING }, { Type.STEEL, Type.GROUND },
			{ Type.NORMAL }, { Type.NORMAL }, { Type.WATER, Type.POISON },
			{ Type.BUG, Type.STEEL }, { Type.BUG, Type.ROCK },
			{ Type.BUG, Type.FIGHTING }, { Type.DARK, Type.ICE },
			{ Type.NORMAL }, { Type.NORMAL }, { Type.FIRE },
			{ Type.FIRE, Type.ROCK }, { Type.ICE, Type.GROUND },
			{ Type.ICE, Type.GROUND }, { Type.WATER, Type.ROCK },
			{ Type.WATER }, { Type.WATER }, { Type.ICE, Type.FLYING },
			{ Type.WATER, Type.FLYING }, { Type.STEEL, Type.FLYING },
			{ Type.DARK, Type.FIRE }, { Type.DARK, Type.FIRE },
			{ Type.WATER, Type.DRAGON }, { Type.GROUND }, { Type.GROUND },
			{ Type.NORMAL }, { Type.NORMAL }, { Type.NORMAL },
			{ Type.FIGHTING }, { Type.FIGHTING }, { Type.ICE, Type.PSYCHIC },
			{ Type.ELECTRIC }, { Type.FIRE }, { Type.NORMAL }, { Type.NORMAL },
			{ Type.ELECTRIC }, { Type.FIRE }, { Type.WATER },
			{ Type.ROCK, Type.GROUND }, { Type.ROCK, Type.GROUND },
			{ Type.ROCK, Type.DARK }, { Type.PSYCHIC, Type.FLYING },
			{ Type.FIRE, Type.FLYING }, { Type.PSYCHIC, Type.GRASS }, };

	// used to initialize all moves
	static final int numMoves = 251;
	static final String[] move_names = { "None", "Pound", "Karate Chop",
			"DoubleSlap", "Comet Punch", "Mega Punch", "Pay Day", "Fire Punch",
			"Ice Punch", "ThunderPunch", "Scratch", "ViceGrip", "Guillotine",
			"Razor Wind", "Swords Dance", "Cut", "Gust", "Wing Attack",
			"Whirlwind", "Fly", "Bind", "Slam", "Vine Whip", "Stomp",
			"Double Kick", "Mega Kick", "Jump Kick", "Rolling Kick",
			"Sand-Attack", "Headbutt", "Horn Attack", "Fury Attack",
			"Horn Drill", "Tackle", "Body Slam", "Wrap", "Take Down", "Thrash",
			"Double-Edge", "Tail Whip", "Poison Sting", "Twineedle",
			"Pin Missile", "Leer", "Bite", "Growl", "Roar", "Sing",
			"Supersonic", "SonicBoom", "Disable", "Acid", "Ember",
			"Flamethrower", "Mist", "Water Gun", "Hydro Pump", "Surf",
			"Ice Beam", "Blizzard", "Psybeam", "BubbleBeam", "Aurora Beam",
			"Hyper Beam", "Peck", "Drill Peck", "Submission", "Low Kick",
			"Counter", "Seismic Toss", "Strength", "Absorb", "Mega Drain",
			"Leech Seed", "Growth", "Razor Leaf", "SolarBeam", "PoisonPowder",
			"Stun Spore", "Sleep Powder", "Petal Dance", "String Shot",
			"Dragon Rage", "Fire Spin", "ThunderShock", "Thunderbolt",
			"Thunder Wave", "Thunder", "Rock Throw", "Earthquake", "Fissure",
			"Dig", "Toxic", "Confusion", "Psychic", "Hypnosis", "Meditate",
			"Agility", "Quick Attack", "Rage", "Teleport", "Night Shade",
			"Mimic", "Screech", "Double Team", "Recover", "Harden", "Minimize",
			"SmokeScreen", "Confuse Ray", "Withdraw", "Defense Curl",
			"Barrier", "Light Screen", "Haze", "Reflect", "Focus Energy",
			"Bide", "Metronome", "Mirror Move", "Selfdestruct", "Egg Bomb",
			"Lick", "Smog", "Sludge", "Bone Club", "Fire Blast", "Waterfall",
			"Clamp", "Swift", "Skull Bash", "Spike Cannon", "Constrict",
			"Amnesia", "Kinesis", "Softboiled", "Hi Jump Kick", "Glare",
			"Dream Eater", "Poison Gas", "Barrage", "Leech Life",
			"Lovely Kiss", "Sky Attack", "Transform", "Bubble", "Dizzy Punch",
			"Spore", "Flash", "Psywave", "Splash", "Acid Armor", "Crabhammer",
			"Explosion", "Fury Swipes", "Bonemerang", "Rest", "Rock Slide",
			"Hyper Fang", "Sharpen", "Conversion", "Tri Attack", "Super Fang",
			"Slash", "Substitute", "Struggle", "Sketch", "Triple Kick",
			"Thief", "Spider Web", "Mind Reader", "Nightmare", "Flame Wheel",
			"Snore", "Curse", "Flail", "Conversion 2", "Aeroblast",
			"Cotton Spore", "Reversal", "Spite", "Powder Snow", "Protect",
			"Mach Punch", "Scary Face", "Faint Attack", "Sweet Kiss",
			"Belly Drum", "Sludge Bomb", "Mud-Slap", "Octazooka", "Spikes",
			"Zap Cannon", "Foresight", "Destiny Bond", "Perish Song",
			"Icy Wind", "Detect", "Bone Rush", "Lock-On", "Outrage",
			"Sandstorm", "Giga Drain", "Endure", "Charm", "Rollout",
			"False Swipe", "Swagger", "Milk Drink", "Spark", "Fury Cutter",
			"Steel Wing", "Mean Look", "Attract", "Sleep Talk", "Heal Bell",
			"Return", "Present", "Frustration", "Safeguard", "Pain Split",
			"Sacred Fire", "Magnitude", "DynamicPunch", "Megahorn",
			"DragonBreath", "Baton Pass", "Encore", "Pursuit", "Rapid Spin",
			"Sweet Scent", "Iron Tail", "Metal Claw", "Vital Throw",
			"Morning Sun", "Synthesis", "Moonlight", "Hidden Power",
			"Cross Chop", "Twister", "Rain Dance", "Sunny Day", "Crunch",
			"Mirror Coat", "Psych Up", "ExtremeSpeed", "AncientPower",
			"Shadow Ball", "Future Sight", "Rock Smash", "Whirlpool",
			"Beat Up", };
	static final Type[] move_types = { Type.NONE, Type.NORMAL, Type.FIGHTING,
			Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.FIRE,
			Type.ICE, Type.ELECTRIC, Type.NORMAL, Type.NORMAL, Type.NORMAL,
			Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.FLYING, Type.FLYING,
			Type.NORMAL, Type.FLYING, Type.NORMAL, Type.NORMAL, Type.GRASS,
			Type.NORMAL, Type.FIGHTING, Type.NORMAL, Type.FIGHTING,
			Type.FIGHTING, Type.GROUND, Type.NORMAL, Type.NORMAL, Type.NORMAL,
			Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.NORMAL,
			Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.POISON, Type.BUG,
			Type.BUG, Type.NORMAL, Type.DARK, Type.NORMAL, Type.NORMAL,
			Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.POISON,
			Type.FIRE, Type.FIRE, Type.ICE, Type.WATER, Type.WATER, Type.WATER,
			Type.ICE, Type.ICE, Type.PSYCHIC, Type.WATER, Type.ICE,
			Type.NORMAL, Type.FLYING, Type.FLYING, Type.FIGHTING,
			Type.FIGHTING, Type.FIGHTING, Type.FIGHTING, Type.NORMAL,
			Type.GRASS, Type.GRASS, Type.GRASS, Type.NORMAL, Type.GRASS,
			Type.GRASS, Type.POISON, Type.GRASS, Type.GRASS, Type.GRASS,
			Type.BUG, Type.DRAGON, Type.FIRE, Type.ELECTRIC, Type.ELECTRIC,
			Type.ELECTRIC, Type.ELECTRIC, Type.ROCK, Type.GROUND, Type.GROUND,
			Type.GROUND, Type.POISON, Type.PSYCHIC, Type.PSYCHIC, Type.PSYCHIC,
			Type.PSYCHIC, Type.PSYCHIC, Type.NORMAL, Type.NORMAL, Type.PSYCHIC,
			Type.GHOST, Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.NORMAL,
			Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.GHOST, Type.WATER,
			Type.NORMAL, Type.PSYCHIC, Type.PSYCHIC, Type.ICE, Type.PSYCHIC,
			Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.FLYING, Type.NORMAL,
			Type.NORMAL, Type.GHOST, Type.POISON, Type.POISON, Type.GROUND,
			Type.FIRE, Type.WATER, Type.WATER, Type.NORMAL, Type.NORMAL,
			Type.NORMAL, Type.NORMAL, Type.PSYCHIC, Type.PSYCHIC, Type.NORMAL,
			Type.FIGHTING, Type.NORMAL, Type.PSYCHIC, Type.POISON, Type.NORMAL,
			Type.BUG, Type.NORMAL, Type.FLYING, Type.NORMAL, Type.WATER,
			Type.NORMAL, Type.GRASS, Type.NORMAL, Type.PSYCHIC, Type.NORMAL,
			Type.POISON, Type.WATER, Type.NORMAL, Type.NORMAL, Type.GROUND,
			Type.PSYCHIC, Type.ROCK, Type.NORMAL, Type.NORMAL, Type.NORMAL,
			Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.NORMAL,
			Type.NORMAL, Type.FIGHTING, Type.DARK, Type.BUG, Type.NORMAL,
			Type.GHOST, Type.FIRE, Type.NORMAL, Type.NONE, Type.NORMAL,
			Type.NORMAL, Type.FLYING, Type.GRASS, Type.FIGHTING, Type.GHOST,
			Type.ICE, Type.NORMAL, Type.FIGHTING, Type.NORMAL, Type.DARK,
			Type.NORMAL, Type.NORMAL, Type.POISON, Type.GROUND, Type.WATER,
			Type.GROUND, Type.ELECTRIC, Type.NORMAL, Type.GHOST, Type.NORMAL,
			Type.ICE, Type.FIGHTING, Type.GROUND, Type.NORMAL, Type.DRAGON,
			Type.ROCK, Type.GRASS, Type.NORMAL, Type.NORMAL, Type.ROCK,
			Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.ELECTRIC, Type.BUG,
			Type.STEEL, Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.NORMAL,
			Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.NORMAL, Type.NORMAL,
			Type.FIRE, Type.GROUND, Type.FIGHTING, Type.BUG, Type.DRAGON,
			Type.NORMAL, Type.NORMAL, Type.DARK, Type.NORMAL, Type.NORMAL,
			Type.STEEL, Type.STEEL, Type.FIGHTING, Type.NORMAL, Type.GRASS,
			Type.NORMAL, Type.NORMAL, Type.FIGHTING, Type.DRAGON, Type.WATER,
			Type.FIRE, Type.DARK, Type.PSYCHIC, Type.NORMAL, Type.NORMAL,
			Type.ROCK, Type.GHOST, Type.PSYCHIC, Type.FIGHTING, Type.WATER,
			Type.DARK };
	static final int[] pps = { 0, 35, 25, 10, 15, 20, 20, 15, 15, 15, 35, 30,
			5, 10, 30, 30, 35, 35, 20, 15, 20, 20, 10, 20, 30, 5, 25, 15, 15,
			15, 25, 20, 5, 35, 15, 20, 20, 20, 15, 30, 35, 20, 20, 30, 25, 40,
			20, 15, 20, 20, 20, 30, 25, 15, 30, 25, 5, 15, 10, 5, 20, 20, 20,
			5, 35, 20, 25, 20, 20, 20, 15, 20, 10, 10, 40, 25, 10, 35, 30, 15,
			20, 40, 10, 15, 30, 15, 20, 10, 15, 10, 5, 10, 10, 25, 10, 20, 40,
			30, 30, 20, 20, 15, 10, 40, 15, 20, 30, 20, 20, 10, 40, 40, 30, 30,
			30, 20, 30, 10, 10, 20, 5, 10, 30, 20, 20, 20, 5, 15, 10, 20, 15,
			15, 35, 20, 15, 10, 20, 30, 15, 40, 20, 15, 10, 5, 10, 30, 10, 15,
			20, 15, 40, 40, 10, 5, 15, 10, 10, 10, 15, 30, 30, 10, 10, 20, 10,
			1, 1, 10, 10, 10, 5, 15, 25, 15, 10, 15, 30, 5, 40, 15, 10, 25, 10,
			30, 10, 20, 10, 10, 10, 10, 10, 20, 5, 40, 5, 5, 15, 5, 10, 5, 15,
			10, 5, 10, 20, 20, 40, 15, 10, 20, 20, 25, 5, 15, 10, 5, 20, 15,
			20, 25, 20, 5, 30, 5, 10, 20, 40, 5, 20, 40, 20, 15, 35, 10, 5, 5,
			5, 15, 5, 20, 5, 5, 15, 20, 10, 5, 5, 15, 15, 15, 15, 10 };
	// powers less than 0 indicate something weird (usually not a damaging
	// attack)
	static final int[] base_powers = { 0, 40, 50, 15, 18, 80, 40, 75, 75, 75,
			40, 55, 0, 80, 0, 50, 40, 60, 0, 70, 15, 80, 35, 65, 30, 120, 70,
			60, 0, 70, 65, 15, 1, 35, 85, 15, 90, 90, 120, 0, 15, 25, 14, 0,
			60, 0, 0, 0, 0, 20, 0, 40, 40, 95, 0, 40, 120, 95, 95, 120, 65, 65,
			65, 150, 35, 80, 80, 50, 1, 1, 80, 20, 40, 0, 0, 55, 120, 0, 0, 0,
			70, 0, 40, 15, 40, 95, 0, 120, 50, 100, 1, 60, 0, 50, 90, 0, 0, 0,
			40, 20, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			200, 100, 20, 20, 65, 65, 120, 80, 35, 60, 100, 20, 10, 0, 0, 0,
			85, 0, 100, 0, 15, 20, 0, 140, 0, 20, 70, 0, 0, 1, 0, 0, 90, 250,
			18, 50, 0, 75, 80, 0, 0, 80, 1, 70, 0, 50, 0, 10, 40, 0, 0, 0, 60,
			40, 0, 1, 0, 100, 0, 1, 0, 40, 0, 40, 0, 60, 0, 0, 90, 20, 65, 0,
			100, 0, 0, 0, 55, 0, 25, 0, 90, 0, 60, 0, 0, 30, 40, 0, 0, 65, 10,
			70, 0, 0, 0, 0, 1, 1, 1, 0, 0, 100, 1, 100, 120, 60, 0, 0, 40, 20,
			0, 100, 50, 70, 0, 0, 0, 1, 100, 40, 0, 0, 80, 1, 0, 80, 60, 80,
			80, 20, 15, 10 };
	static final int[] accuracies = { 0, 100, 100, 85, 85, 85, 100, 100, 100,
			100, 100, 100, 30, 75, 100, 95, 100, 100, 100, 95, 75, 75, 100,
			100, 100, 75, 95, 85, 100, 100, 100, 85, 30, 95, 100, 85, 85, 100,
			100, 100, 100, 100, 85, 100, 100, 100, 100, 55, 55, 90, 55, 100,
			100, 100, 100, 100, 80, 100, 100, 70, 100, 100, 100, 90, 100, 100,
			80, 90, 100, 100, 100, 100, 100, 90, 100, 95, 100, 75, 75, 75, 100,
			95, 100, 70, 100, 100, 100, 70, 90, 100, 30, 100, 85, 100, 100, 60,
			100, 100, 100, 100, 100, 100, 100, 85, 100, 100, 100, 100, 100,
			100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 75,
			100, 70, 100, 85, 85, 100, 75, 100, 100, 100, 100, 100, 80, 100,
			90, 75, 100, 55, 85, 100, 75, 90, 100, 100, 100, 100, 70, 80, 100,
			100, 85, 100, 80, 90, 100, 90, 90, 100, 100, 100, 90, 100, 100,
			100, 100, 90, 100, 100, 100, 100, 100, 100, 100, 100, 100, 95, 85,
			100, 100, 100, 100, 100, 90, 100, 75, 100, 100, 100, 85, 100, 50,
			100, 100, 100, 95, 100, 80, 100, 100, 100, 100, 100, 100, 90, 100,
			90, 100, 100, 95, 90, 100, 100, 100, 100, 100, 90, 100, 100, 100,
			95, 100, 50, 85, 100, 100, 100, 100, 100, 100, 75, 95, 100, 100,
			100, 100, 100, 80, 100, 90, 90, 100, 100, 100, 100, 100, 100, 90,
			100, 70, 100 };

}
